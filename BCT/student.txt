// SPDX-License-Identifier: MIT
pragma solidity ^0.8.19;

contract studentd
{
    struct Student
    {
        uint256 id;
        string name;
        uint256 marks;
    }

    constructor()
    {

    }

    Student[] public students;

    function addStudents(uint256 id, string memory name, uint256 marks) public
    {
        students.push(Student(id, name, marks));
    }

    function getStudentsCount() public view returns(uint256)
    {
        return students.length;
    }

    function getAllStudents() public view returns(Student[] memory)
    {
        return students;
    }

    function getStudent(uint256 index) public view returns(uint256, string memory, uint256)
    {
        require(index <= students.length, "No such entry exists!");

        Student memory student = students[index-1];
        return (student.id, student.name, student.marks);
    }

    receive() external payable 
    {

        revert("The contract doesnt accept ethers!");
    }
}
